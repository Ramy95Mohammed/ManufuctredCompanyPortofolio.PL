// <auto-generated />
using System;
using ManufuctredCompanyPortofolio.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManufuctredCompanyPortofolio.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240207124908_Employee_Department")]
    partial class Employee_Department
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.Department", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManuductringCompanyBranch", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyID"), 1L, 1);

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroundTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufcturingCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.HasIndex("ManufcturingCompanyId");

                    b.ToTable("ManuductringCompanyBranch");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompany", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyID"), 1L, 1);

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("KeyID");

                    b.ToTable("manufcturingCompanies");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompanyPhone", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroundTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufcturingCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.HasIndex("ManufcturingCompanyId");

                    b.ToTable("ManufcturingCompanyPhone");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.Employee", b =>
                {
                    b.HasOne("ManufuctredCompanyPortofolio.DAL.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManuductringCompanyBranch", b =>
                {
                    b.HasOne("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompany", "ManufcturingCompany")
                        .WithMany("ManuductringCompanyBranches")
                        .HasForeignKey("ManufcturingCompanyId");

                    b.Navigation("ManufcturingCompany");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompanyPhone", b =>
                {
                    b.HasOne("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompany", "ManufcturingCompany")
                        .WithMany("ManufcturingCompanyPhones")
                        .HasForeignKey("ManufcturingCompanyId");

                    b.Navigation("ManufcturingCompany");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ManufuctredCompanyPortofolio.DAL.Entities.ManufcturingCompany", b =>
                {
                    b.Navigation("ManuductringCompanyBranches");

                    b.Navigation("ManufcturingCompanyPhones");
                });
#pragma warning restore 612, 618
        }
    }
}
